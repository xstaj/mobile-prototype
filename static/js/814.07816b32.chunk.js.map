{"version":3,"file":"static/js/814.07816b32.chunk.js","mappings":"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","sources":["modules/TradeTicket/notifications.ts","modules/TradeTicket/listener.ts","../node_modules/lodash/_baseDelay.js","../node_modules/lodash/delay.js"],"sourcesContent":["import { NotificationMessage } from 'modules/Notifications/types/NotificationMessage';\n\nconst SUCCESSFULLY_EXECUTED = 'Order has been successfully executed';\nexport const MISSING_CONTENT_INFO = 'MISSING_CONTENT_INFO';\n\nexport const ORDER_PLACED: NotificationMessage = {\n  notificationType: 'success',\n  message: 'Order has been successfully placed',\n  autoDelete: true,\n  autoDeleteTime: 2500,\n};\n\nexport const ORDER_EXECUTED: NotificationMessage = {\n  notificationType: 'success',\n  message: SUCCESSFULLY_EXECUTED,\n  actionLabel: 'View in positions',\n  actionLink: '/portfolio/overview',\n};\n\nexport const ORDER_MODIFIED: NotificationMessage = {\n  notificationType: 'success',\n  message: 'Order has been successfully modified',\n  autoDelete: true,\n  autoDeleteTime: 2500,\n};\n\nexport const ORDER_MODIFY_EXECUTED: NotificationMessage = {\n  notificationType: 'success',\n  message: SUCCESSFULLY_EXECUTED,\n  actionLabel: 'View in orders',\n  actionLink: '/portfolio/orders',\n};\n\nexport const ORDER_TOO_LATE_TO_CANCEL: NotificationMessage = {\n  notificationType: 'warning',\n  message: 'It is too late to cancel this order',\n};\n","import delay from 'lodash/delay';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { ListenerApi, startListening } from 'app/store/actionListenerMiddleware';\nimport { BuySell } from 'app/types/BuySell';\nimport { showNotification } from 'modules/Notifications/slice';\nimport { selectTradeTicketDetails } from 'modules/Orders/selectors';\nimport { setSelectedNetPosition } from 'modules/Portfolio/actions';\nimport { selectPositions, selectSelectedNetPosition } from 'modules/Portfolio/selectors';\nimport { setSelectedNetPositionId } from 'modules/ProductPage/actions';\nimport {\n  createTradeTicketOrder,\n  editTradeTicketOrder,\n  onConfirmedTradeTicketOrder,\n} from './actions';\nimport {\n  ORDER_EXECUTED,\n  ORDER_MODIFIED,\n  ORDER_MODIFY_EXECUTED,\n  ORDER_PLACED,\n  ORDER_TOO_LATE_TO_CANCEL,\n} from './notifications';\nimport { isCancelOrderAction, selectOrderId } from './selector';\nimport { updateTradeTicketOrderForm } from './slice';\n\nstartListening({\n  actionCreator: editTradeTicketOrder,\n  effect: ({ payload: symbol }: PayloadAction<string>, listenerApi: ListenerApi) => {\n    const { dispatch, getState } = listenerApi;\n\n    const positions = selectPositions(getState());\n    const tradeTicketDetails = selectTradeTicketDetails(getState());\n    const netPosition = positions.find((position) => position.symbol === symbol);\n\n    if (netPosition) {\n      dispatch(setSelectedNetPosition(netPosition));\n      dispatch(setSelectedNetPositionId(netPosition.netPositionId));\n      dispatch(\n        updateTradeTicketOrderForm({\n          ask: tradeTicketDetails?.ask,\n          duration: tradeTicketDetails?.durationType ?? '',\n          openOrderType: tradeTicketDetails?.openOrderType ?? '',\n          shares: tradeTicketDetails?.amount ?? 0,\n          buySell: tradeTicketDetails?.buySell,\n          open: tradeTicketDetails?.badgeLabel,\n        }),\n      );\n    }\n  },\n});\n\nstartListening({\n  actionCreator: createTradeTicketOrder,\n  effect: ({ payload: buySell }: PayloadAction<BuySell>, listenerApi: ListenerApi) => {\n    const { dispatch, getState } = listenerApi;\n\n    const position = selectSelectedNetPosition(getState());\n\n    if (position) {\n      dispatch(\n        updateTradeTicketOrderForm({\n          ask: position?.ask,\n          duration: 'Day order',\n          openOrderType: 'Market order',\n          shares: position?.amount ?? 0,\n          buySell,\n          open: position?.badgeLabel,\n        }),\n      );\n    }\n  },\n});\n\nconst SHOW_NOTIFICATIONS_DEFAULT_DELAY = 500;\nconst SHOW_ORDER_EXECUTED_DELAY = 1000;\n\nstartListening({\n  actionCreator: onConfirmedTradeTicketOrder,\n  effect: (action, listenerApi: ListenerApi) => {\n    const { dispatch, getState } = listenerApi;\n\n    const orderId = selectOrderId(getState());\n    const isCancelAction = isCancelOrderAction(getState());\n\n    if (isCancelAction) {\n      delay(() => {\n        dispatch(showNotification(ORDER_TOO_LATE_TO_CANCEL));\n      }, SHOW_NOTIFICATIONS_DEFAULT_DELAY);\n    } else {\n      delay(() => {\n        dispatch(showNotification(orderId ? ORDER_MODIFIED : ORDER_PLACED));\n      }, SHOW_NOTIFICATIONS_DEFAULT_DELAY);\n\n      delay(() => {\n        dispatch(showNotification(orderId ? ORDER_MODIFY_EXECUTED : ORDER_EXECUTED));\n      }, SHOW_ORDER_EXECUTED_DELAY);\n    }\n  },\n});\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The base implementation of `_.delay` and `_.defer` which accepts `args`\n * to provide to `func`.\n *\n * @private\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {Array} args The arguments to provide to `func`.\n * @returns {number|Object} Returns the timer id or timeout object.\n */\nfunction baseDelay(func, wait, args) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nmodule.exports = baseDelay;\n","var baseDelay = require('./_baseDelay'),\n    baseRest = require('./_baseRest'),\n    toNumber = require('./toNumber');\n\n/**\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\n * provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) {\n *   console.log(text);\n * }, 1000, 'later');\n * // => Logs 'later' after one second.\n */\nvar delay = baseRest(function(func, wait, args) {\n  return baseDelay(func, toNumber(wait) || 0, args);\n});\n\nmodule.exports = delay;\n"],"names":["SUCCESSFULLY_EXECUTED","ORDER_PLACED","notificationType","message","autoDelete","autoDeleteTime","ORDER_EXECUTED","actionLabel","actionLink","ORDER_MODIFIED","ORDER_MODIFY_EXECUTED","ORDER_TOO_LATE_TO_CANCEL","startListening","actionCreator","editTradeTicketOrder","effect","listenerApi","symbol","payload","dispatch","getState","positions","selectPositions","tradeTicketDetails","selectTradeTicketDetails","netPosition","find","position","setSelectedNetPosition","setSelectedNetPositionId","netPositionId","updateTradeTicketOrderForm","ask","duration","durationType","openOrderType","shares","amount","buySell","open","badgeLabel","createTradeTicketOrder","selectSelectedNetPosition","onConfirmedTradeTicketOrder","action","orderId","selectOrderId","isCancelOrderAction","delay","showNotification","module","exports","func","wait","args","TypeError","setTimeout","apply","undefined","baseDelay","require","baseRest","toNumber"],"sourceRoot":""}